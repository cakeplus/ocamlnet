Overall:
	Documentation:
	- other


	- Improve Netplex .mli docs

	- rpc:
	  * Complete rpc_mapping_ref
	  * Start rpc_intro

	- Remove CVS Log
	  netstring: DONE
	  netcgi1: (   )
	  nethttpd: (   )
	  pop: (   )
	  smtp: (   )

	- Concept for signals

Details:
	container # is_first_container

Equeue:
	Fix command engines as commented in the code.

	Syntax for engine concatenation?
   	- when_state style:
  	  eng1 >> (function Success _ -> | Error _ -> | ...)
	- ...

Netplex:
	- Move accepted() from Control to System? Implement totally different
	  mechanisms?

	- Enhanced logging. Also allow non-error channels.

Integration of new netcgi2
	- All the TODOs in Netcgi_common
	- Test nethttpd when linked with netcgi2
	- Move new cookie implementation to Nethttp, and make it a 
	  class
	- Faster URL encoding functions can be moved to Netencoding
	  if really faster

netcgi2-plex:
	- Implement mount_dir/mount_at

Bugs Tidalwave:
  * ocamlnet
	- Bug Netchannels.pipe
	- Bug Unix.single_write
	- Feature Nethttpd: server header
	- Bug: Netstring_pcre.global_replace
	- Bug: class pipe: pos_in ist falsch
	- Feature Nethtml.decode
	- Bug Nethttp: ro-Headers nicht unterstützt
	- Feature Netgzip hinzu
  * netclient
	- Bug Http client: Fehler bei Namensauflösung
	- Bug Redirections zu falschen URLs
  * equeue:
	- Bug Fehler: Unixqueue.once und Exceptions

Documentation:

	- Check for texts not yet converted to ocamldoc
	- RPC intro

Http_client.pipeline:
	
	aggressive caching does not work properly. Sometimes descriptors
	are closed in the wrong moment.
