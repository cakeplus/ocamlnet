TOP_DIR=../..

PKGNAME = netcgi_apache
# Keep the name in sync with the one on handler.c :
BUILD_EXTRA = mod_netcgi_apache.so

INCLUDES += $(INC_NETSTRING) $(INC_NETSYS) $(INC_NETCGI2)

CMA_SO = unix.cma str.cma pcre.cma netsys.cma netstring.cma netcgi.cma

OBJECTS = netcgi_apache.cmo netcgi_modtpl.cmo

ALL_EXTRA = mod_netcgi_apache.so
INSTALL_EXTRA = mod_netcgi_apache.so 500netcgi_apache.info

include $(TOP_DIR)/Makefile.rules

# ifeq ($(APACHE_MAJOR),2)
# APACHE_LDFLAGS_SHLIB += -lapr-1 -laprutil-1
# endif

# mod_netcgi_apache.so: apache.lo handler.lo wrappers.lo netcgi_apache.cmo
# 	$(OCAMLC) -o $@ -cc "$(APXS) -c $(filter %.lo,$^)" -custom \
# 	  dynlink.cma $(CMA_SO) \
# 	  $(filter-out %.lo,$^) \
# 	  -cclib '$(APACHE_CFLAGS) $(APACHE_LDFLAGS_SHLIB) $(APACHE_OCAMLLIBS)'
# # $(patsubst %.o,.libs/%.o,$^) \

# %.o: %.c
# 	$(APACHE_CC) $(APACHE_CFLAGS) -I $(APACHE_OCAMLLIBDIR) -c $<

# %.lo: %.c
# 	$(APXS) -c -I$(APACHE_OCAMLLIBDIR) $<

# mod_netcgi_apache.so: netcgi_apache.cmo apache.o handler.o wrappers.o
# 	$(OCAMLC) -o $@ -linkall -custom -cclib -shared \
# 	  dynlink.cma $(CMA_SO) \
# 	  $(patsubst %.o, ./.libs/%.o, $^) \
# 	  -cclib '$(APACHE_CFLAGS) $(APACHE_LDFLAGS_SHLIB) $(APACHE_OCAMLLIBS)'

MOD_OBJECTS := apache.o handler.o wrappers.o netcgi_apache_byte.o

# must be after the `include' for APACHE_MAJOR to be defined
ifeq ($(APACHE_MAJOR),2)
MOD_OBJECTS := $(patsubst %.o,%.lo,$(MOD_OBJECTS))
else
MOD_OBJECTS := $(MOD_OBJECTS)
endif

### Embed Caml code into the C code.
### Requires `caml_startup' instead of `caml_main' in handler.c
mod_netcgi_apache.so: $(MOD_OBJECTS)
	$(APXS) -c -o $@ $^ -L$(APACHE_OCAMLLIBDIR) $(APACHE_OCAMLLIBS)
	test -f .libs/$@ && cp .libs/$@ .

netcgi_apache_byte.lo: netcgi_apache_byte.o
netcgi_apache_byte.o: netcgi_apache.cmo
	$(OCAMLC) -output-obj -o $@ -cc '$(APXS) -c' dynlink.cma $(CMA_SO) $^

%.o: %.c
	$(APXS) -c -I$(APACHE_OCAMLLIBDIR) $<
%.lo: %.c
	$(APXS) -c -I$(APACHE_OCAMLLIBDIR) $<

