# Inclusion of Makefile.conf may fail when cleaning up:

-include $(TOP_DIR)/Makefile.conf

# Makefile.conf: written by "configure".

# How to invoke compilers and tools:
# (May be moved to Makefile.conf if necessary)

OCAMLC    = $(OCAMLFIND) ocamlc -g $(OCAMLC_OPTIONS) $(INCLUDES) $(PP_OPTIONS)
OCAMLOPT  = $(OCAMLFIND) ocamlopt -inline 10 $(OCAMLOPT_OPTIONS) $(INCLUDES) $(PP_OPTIONS)
OCAMLDEP  = $(OCAMLFIND) ocamldep $(OCAMLDEP_OPTIONS) $(PP_OPTIONS)
OCAMLFIND = ocamlfind
OCAMLYACC = ocamlyacc
OCAMLLEX  = ocamllex
CAMLP4    = camlp4
OCAMLMKLIB = ocamlmklib
OCAMLDOC  = ocamldoc

TOOLS_DIR = $(TOP_DIR)/tools
COLLECT_FILES = $(TOOLS_DIR)/collect_files

# Standard definitions and rules

XOBJECTS = $(OBJECTS:.cmo=.cmx)
ARCHIVE  ?= $(PKGNAME)

all: $(ARCHIVE) $(ALL_EXTRA)

opt: $(XARCHIVE) $(OPT_EXTRA)

$(ARCHIVE).cma: $(OBJECTS) $(COBJECTS)
	$(OCAMLMKLIB) -o $(ARCHIVE) $(OBJECTS) $(COBJECTS) $(LINK_OPTIONS)

$(ARCHIVE).cmxa: $(XOBJECTS) $(COBJECTS)
	$(OCAMLMKLIB) -o $(ARCHIVE) $(XOBJECTS) $(COBJECTS) $(LINK_OPTIONS)

# Files to remove everywhere by "make clean":

CLEAN_LIST = *.cmi *.cmo *.cma *.cmx *.o *.a *.cmxa dll* packlist-* \
	     ocamldoc.dump $(GENERATE)

# Generic build rules:

.SUFFIXES: .cmo .cmi .cmx .ml .mli .mll .mly .c .o

.ml.cmx:
	$(OCAMLOPT) -c $(OCAMLOPT_OPTIONS_FOR_$<) $<

.ml.cmo:
	$(OCAMLC) -c $(OCAMLC_OPTIONS_FOR_$<) $<

.mli.cmi:
	$(OCAMLC) -c $(OCAMLC_OPTIONS_FOR_$<) $<

.mll.ml:
	$(OCAMLLEX) $<

.mly.ml:
	$(OCAMLYACC) $<

.c.o:
	$(OCAMLC) -c -ccopt -O $(CC_OPTIONS) $(CC_OPTIONS_FOR_$<) $<

ocamldoc.dump: $(DOBJECTS)
	ocamldoc -dump ocamldoc.dump -stars $(INCLUDES) $(OCAMLDOC_OPTIONS) $(DOBJECTS)

# Install rules:

.PHONY: install
install: install-$(INSTMETHOD) $(INSTOTHER)

.PHONY: uninstall
uninstall: $(UNINSTOTHER) uninstall-$(INSTMETHOD) 

.PHONY: install-findlib
install-findlib:
	files=`$(COLLECT_FILES) *.mli *.cmi *.cma *.cmxa *.a META $(INSTALL_EXTRA)` && \
	$(OCAMLFIND) install $(PKGNAME) $$files

.PHONY: uninstall-findlib
uninstall-findlib:
	$(OCAMLFIND) remove $(PKGNAME)


#----------------------------------------------------------------------
# general rules:

depend:: *.ml *.mli
	$(OCAMLDEP) *.ml *.mli >depend || { rm -f depend; exit 1; }

.PHONY: clean
clean::
	rm -f $(CLEAN_LIST)

.PHONY: distclean
distclean::
	rm -f $(CLEAN_LIST) META
	rm -f *~ depend

generate:: $(GENERATE)
